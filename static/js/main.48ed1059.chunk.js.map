{"version":3,"sources":["styles/darkTheme.js","styles/lightTheme.js","hooks/useToggleState.js","hooks/useInputState.js","reducers/todoReducer.js","contexts/todosContext.js","hooks/useLocalStorageReducer.js","hooks/useDarkMode.js","TodoEditForm.js","Todo.js","SortableList.js","TodoList.js","TodoForm.js","styles/imgs/bgLight.png","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["darkTheme","palette","type","primary","main","secondary","background","paper","shape","borderRadius","typography","fontFamily","lightTheme","useToggleState","val","useState","state","setState","value","e","target","reducer","action","id","uuidv4","task","completed","filter","todo","map","newTask","arrayMove","oldIndex","newIndex","initialTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","useReducer","JSON","parse","window","localStorage","getItem","String","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","todos","Provider","children","DarkModeContext","DarkModeProvider","toggleState","useDarkMode","isDark","toggleIsDark","useStyles","makeStyles","root","display","width","textField","flexGrow","closeBtn","height","alignSelf","TodoEditForm","toggleIsEditing","classes","useContext","useInputState","handleChange","reset","className","onSubmit","preventDefault","style","marginLeft","TextField","onChange","variant","margin","fullWidth","autoFocus","IconButton","onClick","aria-label","theme","opacity","icon","isSorting","transition","checkbox","dragHandle","cursor","text","textDecoration","textDecorationColor","textDecorationThickness","Todo","SortableElement","last","isEditing","DragHandle","sortableHandle","ListItem","ClickAwayListener","onClickAway","Fade","in","timeout","Checkbox","disableRipple","color","checked","tabIndex","ListItemText","Typography","noWrap","ListItemSecondaryAction","edge","Divider","memo","SortableList","SortableContainer","List","padding","i","index","length","backdropFilter","sort","boxShadow","TodoList","setIsSorting","Paper","elevation","onSortStart","helperClass","axis","lockAxis","useDragHandle","transitionDuration","onSortEnd","console","log","distance","justifyContent","formContainer","addBtn","TodoForm","isAdding","toggleIsAdding","Grow","transformOrigin","label","required","Button","endIcon","position","left","right","zIndex","backgroundImage","bgLight","backgroundPosition","backgroundSize","overflowY","paddingBottom","appBar","toolBar","title","alignItems","TodoApp","ThemeProvider","createMuiTheme","CssBaseline","AppBar","Grid","component","container","spacing","item","Switch","justify","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ed1059.chunk.js","sourcesContent":["const darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#D94A98\",\r\n    },\r\n    secondary: {\r\n      main: \"rgba(66,66,66,0.7)\",\r\n    },\r\n    background: {\r\n      paper: \"rgba(33,33,33,0.6)\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 15,\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif;\",\r\n  },\r\n};\r\n\r\nexport default darkTheme;\r\n","const lightTheme = {\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#D94A98\",\r\n    },\r\n    secondary: {\r\n      main: \"rgba(255,255,255,0.7)\",\r\n    },\r\n    background: {\r\n      paper: \"rgba(255,255,255,0.4)\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 15,\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif;\",\r\n  },\r\n};\r\n\r\nexport default lightTheme;\r\n","import { useState } from \"react\";\r\n\r\nfunction useToggleState(val) {\r\n  const [state, setState] = useState(val);\r\n\r\n  const toggleState = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggleState];\r\n}\r\n\r\nexport default useToggleState;\r\n","import { useState } from \"react\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (value) => {\r\n  const [state, setState] = useState(value);\r\n\r\n  const handleChange = (e) => {\r\n    setState(e.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setState(\"\");\r\n  };\r\n  return [state, handleChange, reset];\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [...state, { id: uuidv4(), task: action.task, completed: false }];\r\n    case \"REMOVE\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case \"TOGGLE\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case \"EDIT\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\r\n      );\r\n    case \"ARRANGE\":\r\n      return arrayMove(state, action.oldIndex, action.newIndex);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createContext } from \"react\";\r\nimport todoReducer from \"../reducers/todoReducer\";\r\nimport { useLocalStorageReducer } from \"../hooks/useLocalStorageReducer\";\r\nimport { useDarkMode } from \"../hooks/useDarkMode\";\r\n\r\nconst initialTodos = [{ id: 1, task: \"Brush Teeth\", completed: false }];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    \"todos\",\r\n    initialTodos,\r\n    todoReducer\r\n  );\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n\r\nexport const DarkModeContext = createContext();\r\nexport function DarkModeProvider(props) {\r\n  const [isDark, toggleIsDark] = useDarkMode(\"isDark\", false);\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDark, toggleIsDark }}>\r\n      {props.children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n}\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (e) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, dispatch];\r\n}\r\n\r\nexport { useLocalStorageReducer };\r\n","import useToggleState from \"./useToggleState\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction useDarkMode(key, defaultVal) {\r\n  const [state, toggleState] = useToggleState(() => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (e) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, toggleState];\r\n}\r\n\r\nexport { useDarkMode };\r\n","import React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n  textField: {\r\n    flexGrow: \"1\",\r\n  },\r\n  closeBtn: {\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n\r\nfunction TodoEditForm({ id, task, toggleIsEditing }) {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useContext(DispatchContext);\r\n\r\n  const [value, handleChange, reset] = useInputState(task);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        className={classes.textField}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch({ type: \"EDIT\", newTask: value, id: id });\r\n          reset();\r\n          toggleIsEditing();\r\n        }}\r\n        style={{ marginLeft: \"1rem\", width: \"75%\" }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"standard\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          autoFocus\r\n        />\r\n      </form>\r\n      <IconButton\r\n        onClick={toggleIsEditing}\r\n        className={classes.closeBtn}\r\n        aria-label=\"cancel\"\r\n      >\r\n        <ClearRoundedIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoEditForm;\r\n","import React, { useContext, memo } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nimport { SortableElement, sortableHandle } from \"react-sortable-hoc\";\r\n\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nimport TodoEditForm from \"./TodoEditForm\";\r\n\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"64px\",\r\n    \"&:hover $icon\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    display: (props) => props.isSorting && \"none\",\r\n    opacity: \"0\",\r\n    transition: \"color 0.5s\",\r\n  },\r\n  checkbox: {\r\n    transition: \"all 0.5s\",\r\n  },\r\n  dragHandle: {\r\n    cursor: \"grab\",\r\n  },\r\n  text: {\r\n    textDecoration: (props) => (props.completed ? \"line-through\" : \"none\"),\r\n    textDecorationColor: `${theme.palette.primary.main} !important`,\r\n    textDecorationThickness: \"25% !important\",\r\n  },\r\n}));\r\n\r\nconst Todo = SortableElement(({ id, completed, task, last, isSorting }) => {\r\n  const classes = useStyles({ completed, isSorting });\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggleIsEditing] = useToggleState(false);\r\n  const DragHandle = sortableHandle(() => (\r\n    <DragIndicatorIcon className={classes.dragHandle} />\r\n  ));\r\n  return (\r\n    <div>\r\n      <ListItem className={classes.root}>\r\n        {isEditing ? (\r\n          <ClickAwayListener onClickAway={toggleIsEditing}>\r\n            <Fade in={isEditing} timeout={500}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <TodoEditForm\r\n                  id={id}\r\n                  task={task}\r\n                  toggleIsEditing={toggleIsEditing}\r\n                />\r\n              </div>\r\n            </Fade>\r\n          </ClickAwayListener>\r\n        ) : (\r\n          <>\r\n            <DragHandle />\r\n            <Checkbox\r\n              disableRipple\r\n              className={classes.checkbox}\r\n              color=\"primary\"\r\n              checked={completed}\r\n              tabIndex={-1}\r\n              onClick={() => dispatch({ type: \"TOGGLE\", id: id })}\r\n            />\r\n            <ListItemText className={classes.text}>\r\n              <Typography noWrap style={{ width: \"80%\" }}>\r\n                {task}\r\n              </Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Edit\"\r\n                onClick={toggleIsEditing}\r\n              >\r\n                <EditOutlinedIcon className={classes.icon} />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Delete\"\r\n                onClick={() => dispatch({ type: \"REMOVE\", id: id })}\r\n              >\r\n                <DeleteOutlineOutlinedIcon className={classes.icon} />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </>\r\n        )}\r\n      </ListItem>\r\n      {!last ? null : <Divider />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default memo(Todo);\r\n","import React, { useContext } from \"react\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { TodosContext } from \"./contexts/todosContext\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst SortableList = SortableContainer(({ isSorting }) => {\r\n  const todos = useContext(TodosContext);\r\n  return (\r\n    <List style={{ padding: 0 }}>\r\n      {todos.map((todo, i) => (\r\n        <Todo\r\n          {...todo}\r\n          key={todo.id}\r\n          index={i}\r\n          last={i < todos.length - 1}\r\n          isSorting={isSorting}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default SortableList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport arrayMove from \"array-move\";\r\n\r\nimport Todo from \"./Todo\";\r\nimport { TodosContext } from \"./contexts/todosContext\";\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\n\r\nimport SortableList from \"./SortableList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backdropFilter: \" blur(10px)\",\r\n    transition: \"all 0.5s\",\r\n  },\r\n  sort: {\r\n    background: theme.palette.background.paper,\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"-3px 6px 5px -5px rgba(0,0,0,0.2)\",\r\n  },\r\n}));\r\n\r\nfunction TodoList() {\r\n  const classes = useStyles();\r\n  const todos = useContext(TodosContext);\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isSorting, setIsSorting] = useState(false);\r\n\r\n  const sortStart = () => {\r\n    setIsSorting(true);\r\n  };\r\n\r\n  const sortEnd = () => {\r\n    setIsSorting(false);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    dispatch({\r\n      type: \"ARRANGE\",\r\n      oldIndex: oldIndex,\r\n      newIndex: newIndex,\r\n    });\r\n    sortEnd();\r\n    console.log(\"sortend\");\r\n  };\r\n\r\n  if (todos.length)\r\n    return (\r\n      <Paper className={classes.root} elevation={0}>\r\n        <SortableList\r\n          onSortStart={sortStart}\r\n          helperClass={classes.sort}\r\n          axis=\"y\"\r\n          lockAxis=\"y\"\r\n          useDragHandle\r\n          transitionDuration={500}\r\n          onSortEnd={onSortEnd}\r\n          distance={10}\r\n          isSorting={isSorting}\r\n        />\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  formContainer: {\r\n    width: \"100%\",\r\n    backdropFilter: \" blur(10px)\",\r\n    transition: \"all 0.5s\",\r\n    display: \"flex\",\r\n    height: \"64px\",\r\n  },\r\n  textField: {\r\n    flexGrow: \"1\",\r\n  },\r\n  addBtn: {\r\n    margin: \"1.5rem 0\",\r\n    height: \"48px\",\r\n    width: \"150px\",\r\n    borderRadius: \"24px\",\r\n  },\r\n  closeBtn: {\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n\r\nfunction TodoForm() {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  const [isAdding, toggleIsAdding] = useToggleState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {!isAdding ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.addBtn}\r\n          endIcon={<AddRoundedIcon />}\r\n          onClick={toggleIsAdding}\r\n          disableRipple\r\n        >\r\n          New Task\r\n        </Button>\r\n      ) : (\r\n        <ClickAwayListener onClickAway={toggleIsAdding}>\r\n          <Grow\r\n            in={isAdding}\r\n            timeout={300}\r\n            style={{ transformOrigin: \"right center\" }}\r\n          >\r\n            <Paper\r\n              className={classes.formContainer}\r\n              style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}\r\n            >\r\n              <form\r\n                className={classes.textField}\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch({ type: \"ADD\", task: value });\r\n                  reset();\r\n                  toggleIsAdding();\r\n                }}\r\n              >\r\n                <TextField\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  label=\"Add new task\"\r\n                  variant=\"standard\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  autoFocus\r\n                />\r\n              </form>\r\n              <IconButton\r\n                onClick={toggleIsAdding}\r\n                className={classes.closeBtn}\r\n                aria-label=\"cancel\"\r\n              >\r\n                <ClearRoundedIcon />\r\n              </IconButton>\r\n            </Paper>\r\n          </Grow>\r\n        </ClickAwayListener>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","export default __webpack_public_path__ + \"static/media/bgLight.e5c87708.png\";","import React, { useContext } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/Appbar\";\r\nimport ToolBar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport WbSunnyOutlinedIcon from \"@material-ui/icons/WbSunnyOutlined\";\r\nimport Brightness2OutlinedIcon from \"@material-ui/icons/Brightness2Outlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nimport darkTheme from \"./styles/darkTheme\";\r\nimport lightTheme from \"./styles/lightTheme\";\r\n\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { TodosProvider } from \"./contexts/todosContext\";\r\nimport bgLight from \"./styles/imgs/bgLight.png\";\r\nimport { DarkModeContext } from \"./contexts/todosContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  background: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    padding: 0,\r\n    margin: 0,\r\n    zIndex: 0,\r\n    backgroundImage: `url(${bgLight})`,\r\n    filter: (props) => (props.isDark ? \"brightness(60%)\" : \"brightness(100%)\"),\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    overflowY: \"auto\",\r\n    transition: \"all 0.5s\",\r\n    height: \"100vh\",\r\n  },\r\n  root: {\r\n    zIndex: \"1\",\r\n    padding: 0,\r\n    margin: 0,\r\n    transition: \"all 0.5s\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n  appBar: {\r\n    backdropFilter: \" blur(5px)\",\r\n    transition: \"all 0.5s\",\r\n  },\r\n  toolBar: {\r\n    alignSelf: \"center\",\r\n    width: \"70%\",\r\n    justifyContent: \"space-between\",\r\n    transition: \"all 0.2s\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nfunction TodoApp() {\r\n  const { isDark, toggleIsDark } = useContext(DarkModeContext);\r\n  const classes = useStyles({ isDark });\r\n  return (\r\n    <ThemeProvider theme={createMuiTheme(isDark ? darkTheme : lightTheme)}>\r\n      <CssBaseline />\r\n      <div className={classes.background}></div>\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          className={classes.appBar}\r\n          color=\"secondary\"\r\n          position=\"sticky\"\r\n          style={{ height: \"64px\" }}\r\n        >\r\n          <ToolBar className={classes.toolBar}>\r\n            <Typography color=\"inherit\" variant=\"h5\" className={classes.title}>\r\n              <AssignmentTurnedInIcon color=\"primary\" />\r\n              TodoListtttt\r\n            </Typography>\r\n            <div>\r\n              <Grid\r\n                component=\"label\"\r\n                container\r\n                alignItems=\"center\"\r\n                spacing={0.5}\r\n              >\r\n                <Grid item>\r\n                  <span className=\"material-icons-outlined\">light_mode</span>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    disableRipple\r\n                    color=\"primary\"\r\n                    checked={isDark}\r\n                    onChange={toggleIsDark}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <span className=\"material-icons-outlined\">dark_mode</span>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </ToolBar>\r\n        </AppBar>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={11} md={8} lg={4}>\r\n            <TodosProvider>\r\n              <TodoForm />\r\n              <TodoList />\r\n            </TodosProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import TodoApp from \"./TodoApp\";\n\nimport { DarkModeProvider } from \"./contexts/todosContext\";\n\nfunction App() {\n  return (\n    <DarkModeProvider>\n      <TodoApp />\n    </DarkModeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}