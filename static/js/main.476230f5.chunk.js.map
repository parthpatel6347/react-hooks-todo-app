{"version":3,"sources":["styles/darkTheme.js","styles/lightTheme.js","reducers/todoReducer.js","hooks/useToggleState.js","contexts/todosContext.js","hooks/useLocalStorageReducer.js","hooks/useDarkMode.js","hooks/useInputState.js","TodoEditForm.js","Todo.js","SortableList.js","TodoList.js","TodoForm.js","styles/imgs/bgLight.png","TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["darkTheme","palette","type","primary","main","secondary","background","paper","shape","borderRadius","typography","fontFamily","lightTheme","reducer","state","action","id","uuidv4","task","completed","filter","todo","map","newTask","arrayMove","oldIndex","newIndex","useToggleState","val","useState","setState","initialTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","key","defaultVal","useReducer","JSON","parse","window","localStorage","getItem","String","e","dispatch","useEffect","setItem","stringify","useLocalStorageReducer","todoReducer","todos","Provider","value","children","DarkModeContext","DarkModeProvider","toggleState","useDarkMode","isDark","toggleIsDark","target","useStyles","makeStyles","theme","root","display","width","textField","flexGrow","closeBtn","height","alignSelf","breakpoints","down","TodoEditForm","toggleIsEditing","classes","useContext","useInputState","handleChange","reset","className","onSubmit","preventDefault","style","marginLeft","TextField","onChange","variant","margin","fullWidth","autoFocus","IconButton","aria-label","onClick","paddingLeft","opacity","icon","isSorting","transition","checkbox","dragHandle","cursor","padding","text","textDecoration","textDecorationColor","textDecorationThickness","Todo","SortableElement","last","isEditing","DragHandle","sortableHandle","ListItem","ClickAwayListener","onClickAway","Fade","in","timeout","Checkbox","disableRipple","color","checked","tabIndex","ListItemText","Typography","noWrap","ListItemSecondaryAction","edge","Divider","memo","SortableList","SortableContainer","List","i","index","length","backdropFilter","sort","boxShadow","TodoList","setIsSorting","Paper","elevation","onSortStart","helperClass","axis","lockAxis","useDragHandle","transitionDuration","onSortEnd","distance","justifyContent","formContainer","addBtn","TodoForm","isAdding","toggleIsAdding","Grow","transformOrigin","label","required","Button","endIcon","position","left","right","zIndex","backgroundImage","bgLight","backgroundPosition","backgroundSize","overflowY","paddingBottom","appBar","toolBar","title","alignItems","TodoApp","ThemeProvider","createMuiTheme","CssBaseline","AppBar","Grid","component","container","item","Switch","justify","xs","sm","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.476230f5.chunk.js","sourcesContent":["const darkTheme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#D94A98\",\r\n    },\r\n    secondary: {\r\n      main: \"rgba(66,66,66,0.7)\",\r\n    },\r\n    background: {\r\n      paper: \"rgba(33,33,33,0.6)\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 15,\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif;\",\r\n  },\r\n};\r\n\r\nexport default darkTheme;\r\n","const lightTheme = {\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#D94A98\",\r\n    },\r\n    secondary: {\r\n      main: \"rgba(255,255,255,0.7)\",\r\n    },\r\n    background: {\r\n      paper: \"rgba(255,255,255,0.4)\",\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 15,\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Poppins', sans-serif;\",\r\n  },\r\n};\r\n\r\nexport default lightTheme;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport arrayMove from \"array-move\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return [...state, { id: uuidv4(), task: action.task, completed: false }];\r\n    case \"REMOVE\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case \"TOGGLE\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case \"EDIT\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\r\n      );\r\n    case \"ARRANGE\":\r\n      return arrayMove(state, action.oldIndex, action.newIndex);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { useState } from \"react\";\r\n\r\nfunction useToggleState(val) {\r\n  const [state, setState] = useState(val);\r\n\r\n  const toggleState = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggleState];\r\n}\r\n\r\nexport default useToggleState;\r\n","import { createContext } from \"react\";\r\nimport todoReducer from \"../reducers/todoReducer\";\r\nimport { useLocalStorageReducer } from \"../hooks/useLocalStorageReducer\";\r\nimport { useDarkMode } from \"../hooks/useDarkMode\";\r\n\r\nconst initialTodos = [\r\n  { id: 1, task: \"Buy milk\", completed: false },\r\n  { id: 2, task: \"Check e-mails\", completed: false },\r\n  { id: 3, task: \"Set dentist appointment\", completed: false },\r\n];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    \"todos\",\r\n    initialTodos,\r\n    todoReducer\r\n  );\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n\r\nexport const DarkModeContext = createContext();\r\nexport function DarkModeProvider(props) {\r\n  const [isDark, toggleIsDark] = useDarkMode(\"isDark\", false);\r\n  return (\r\n    <DarkModeContext.Provider value={{ isDark, toggleIsDark }}>\r\n      {props.children}\r\n    </DarkModeContext.Provider>\r\n  );\r\n}\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\r\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (e) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, dispatch];\r\n}\r\n\r\nexport { useLocalStorageReducer };\r\n","import useToggleState from \"./useToggleState\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction useDarkMode(key, defaultVal) {\r\n  const [state, toggleState] = useToggleState(() => {\r\n    let val;\r\n    try {\r\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n    } catch (e) {\r\n      val = defaultVal;\r\n    }\r\n    return val;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, toggleState];\r\n}\r\n\r\nexport { useDarkMode };\r\n","import { useState } from \"react\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (value) => {\r\n  const [state, setState] = useState(value);\r\n\r\n  const handleChange = (e) => {\r\n    setState(e.target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setState(\"\");\r\n  };\r\n  return [state, handleChange, reset];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n  textField: {\r\n    flexGrow: \"1\",\r\n    display: \"flex\",\r\n  },\r\n  closeBtn: {\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    alignSelf: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"40px\",\r\n      width: \"40px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TodoEditForm({ id, task, toggleIsEditing }) {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useContext(DispatchContext);\r\n\r\n  const [value, handleChange, reset] = useInputState(task);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form\r\n        className={classes.textField}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch({ type: \"EDIT\", newTask: value, id: id });\r\n          reset();\r\n          toggleIsEditing();\r\n        }}\r\n        style={{ marginLeft: \"1rem\", width: \"75%\" }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"standard\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          autoFocus\r\n        />\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.closeBtn}\r\n          aria-label=\"cancel\"\r\n        >\r\n          <CheckRoundedIcon />\r\n        </IconButton>\r\n      </form>\r\n      <IconButton\r\n        onClick={toggleIsEditing}\r\n        className={classes.closeBtn}\r\n        aria-label=\"cancel\"\r\n      >\r\n        <ClearRoundedIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoEditForm;\r\n","import React, { useContext, memo } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nimport { SortableElement, sortableHandle } from \"react-sortable-hoc\";\r\n\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nimport TodoEditForm from \"./TodoEditForm\";\r\n\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"64px\",\r\n    paddingLeft: \"0\",\r\n    \"&:hover $icon\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  icon: {\r\n    display: (props) => props.isSorting && \"none\",\r\n    opacity: \"0\",\r\n    transition: \"color 0.5s\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      opacity: \".8\",\r\n    },\r\n  },\r\n  checkbox: {\r\n    transition: \"all 0.5s\",\r\n    paddingLeft: \"0\",\r\n  },\r\n  dragHandle: {\r\n    cursor: \"grab\",\r\n    height: \"100%\",\r\n    width: \"48px\",\r\n    padding: \"0 12px\",\r\n  },\r\n  text: {\r\n    textDecoration: (props) => (props.completed ? \"line-through\" : \"none\"),\r\n    textDecorationColor: `${theme.palette.primary.main} !important`,\r\n    textDecorationThickness: \"3px !important\",\r\n    width: \"80%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"75%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Todo = SortableElement(({ id, completed, task, last, isSorting }) => {\r\n  const classes = useStyles({ completed, isSorting });\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggleIsEditing] = useToggleState(false);\r\n  const DragHandle = sortableHandle(() => (\r\n    <DragIndicatorIcon className={classes.dragHandle} />\r\n  ));\r\n  return (\r\n    <div>\r\n      <ListItem className={classes.root}>\r\n        {isEditing ? (\r\n          <ClickAwayListener onClickAway={toggleIsEditing}>\r\n            <Fade in={isEditing} timeout={500}>\r\n              <div style={{ width: \"100%\" }}>\r\n                <TodoEditForm\r\n                  id={id}\r\n                  task={task}\r\n                  toggleIsEditing={toggleIsEditing}\r\n                />\r\n              </div>\r\n            </Fade>\r\n          </ClickAwayListener>\r\n        ) : (\r\n          <>\r\n            <DragHandle />\r\n            <Checkbox\r\n              disableRipple\r\n              className={classes.checkbox}\r\n              color=\"primary\"\r\n              checked={completed}\r\n              tabIndex={-1}\r\n              onClick={() => dispatch({ type: \"TOGGLE\", id: id })}\r\n            />\r\n            <ListItemText>\r\n              <Typography noWrap className={classes.text}>\r\n                {task}\r\n              </Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Edit\"\r\n                onClick={toggleIsEditing}\r\n              >\r\n                <EditOutlinedIcon className={classes.icon} />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"Delete\"\r\n                onClick={() => dispatch({ type: \"REMOVE\", id: id })}\r\n              >\r\n                <DeleteOutlineOutlinedIcon className={classes.icon} />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </>\r\n        )}\r\n      </ListItem>\r\n      {!last ? null : <Divider />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default memo(Todo);\r\n","import React, { useContext } from \"react\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { TodosContext } from \"./contexts/todosContext\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst SortableList = SortableContainer(({ isSorting }) => {\r\n  const todos = useContext(TodosContext);\r\n  return (\r\n    <List style={{ padding: 0 }}>\r\n      {todos.map((todo, i) => (\r\n        <Todo\r\n          {...todo}\r\n          key={todo.id}\r\n          index={i}\r\n          last={i < todos.length - 1}\r\n          isSorting={isSorting}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default SortableList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { TodosContext } from \"./contexts/todosContext\";\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\n\r\nimport SortableList from \"./SortableList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backdropFilter: \" blur(10px)\",\r\n    transition: \"all 0.5s\",\r\n  },\r\n  sort: {\r\n    background: theme.palette.background.paper,\r\n    borderRadius: \"15px\",\r\n    boxShadow: \"-3px 6px 5px -5px rgba(0,0,0,0.2)\",\r\n  },\r\n}));\r\n\r\nfunction TodoList() {\r\n  const classes = useStyles();\r\n  const todos = useContext(TodosContext);\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isSorting, setIsSorting] = useState(false);\r\n\r\n  const sortStart = () => {\r\n    setIsSorting(true);\r\n  };\r\n\r\n  const sortEnd = () => {\r\n    setIsSorting(false);\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    dispatch({\r\n      type: \"ARRANGE\",\r\n      oldIndex: oldIndex,\r\n      newIndex: newIndex,\r\n    });\r\n    sortEnd();\r\n  };\r\n\r\n  if (todos.length)\r\n    return (\r\n      <Paper className={classes.root} elevation={0}>\r\n        <SortableList\r\n          onSortStart={sortStart}\r\n          helperClass={classes.sort}\r\n          axis=\"y\"\r\n          lockAxis=\"y\"\r\n          useDragHandle\r\n          transitionDuration={500}\r\n          onSortEnd={onSortEnd}\r\n          distance={10}\r\n          isSorting={isSorting}\r\n        />\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport ClearRoundedIcon from \"@material-ui/icons/ClearRounded\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\n\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nimport useInputState from \"./hooks/useInputState\";\r\nimport { DispatchContext } from \"./contexts/todosContext\";\r\nimport useToggleState from \"./hooks/useToggleState\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  formContainer: {\r\n    width: \"100%\",\r\n    backdropFilter: \" blur(10px)\",\r\n    transition: \"all 0.5s\",\r\n    display: \"flex\",\r\n    height: \"64px\",\r\n  },\r\n  textField: {\r\n    flexGrow: \"1\",\r\n    display: \"flex\",\r\n  },\r\n  addBtn: {\r\n    margin: \"1.5rem 0\",\r\n    height: \"48px\",\r\n    width: \"150px\",\r\n    borderRadius: \"24px\",\r\n  },\r\n  closeBtn: {\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    alignSelf: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"40px\",\r\n      width: \"40px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TodoForm() {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  const [isAdding, toggleIsAdding] = useToggleState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {!isAdding ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.addBtn}\r\n          endIcon={<AddRoundedIcon />}\r\n          onClick={toggleIsAdding}\r\n          disableRipple\r\n        >\r\n          New Task\r\n        </Button>\r\n      ) : (\r\n        <ClickAwayListener onClickAway={toggleIsAdding}>\r\n          <Grow\r\n            in={isAdding}\r\n            timeout={300}\r\n            style={{ transformOrigin: \"right center\" }}\r\n          >\r\n            <Paper\r\n              className={classes.formContainer}\r\n              style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}\r\n            >\r\n              <form\r\n                className={classes.textField}\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch({ type: \"ADD\", task: value });\r\n                  reset();\r\n                  toggleIsAdding();\r\n                }}\r\n              >\r\n                <TextField\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  label=\"Add new task\"\r\n                  variant=\"standard\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  autoFocus\r\n                />\r\n                <IconButton\r\n                  type=\"submit\"\r\n                  className={classes.closeBtn}\r\n                  aria-label=\"cancel\"\r\n                >\r\n                  <CheckRoundedIcon />\r\n                </IconButton>\r\n              </form>\r\n\r\n              <IconButton\r\n                onClick={toggleIsAdding}\r\n                className={classes.closeBtn}\r\n                aria-label=\"cancel\"\r\n              >\r\n                <ClearRoundedIcon />\r\n              </IconButton>\r\n            </Paper>\r\n          </Grow>\r\n        </ClickAwayListener>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","export default __webpack_public_path__ + \"static/media/bgLight.e5c87708.png\";","import React, { useContext } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/Appbar\";\r\nimport ToolBar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nimport darkTheme from \"./styles/darkTheme\";\r\nimport lightTheme from \"./styles/lightTheme\";\r\n\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { TodosProvider } from \"./contexts/todosContext\";\r\nimport bgLight from \"./styles/imgs/bgLight.png\";\r\nimport { DarkModeContext } from \"./contexts/todosContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  background: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    padding: 0,\r\n    margin: 0,\r\n    zIndex: 0,\r\n    backgroundImage: `url(${bgLight})`,\r\n    filter: (props) => (props.isDark ? \"brightness(60%)\" : \"brightness(100%)\"),\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    overflowY: \"auto\",\r\n    transition: \"all 0.5s\",\r\n    height: \"100vh\",\r\n  },\r\n  root: {\r\n    zIndex: \"1\",\r\n    padding: 0,\r\n    margin: 0,\r\n    transition: \"all 0.5s\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n  appBar: {\r\n    backdropFilter: \" blur(5px)\",\r\n    transition: \"all 0.5s\",\r\n  },\r\n  toolBar: {\r\n    alignSelf: \"center\",\r\n    width: \"70%\",\r\n    justifyContent: \"space-between\",\r\n    transition: \"all 0.2s\",\r\n    height: \"100%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"95%\",\r\n    },\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nfunction TodoApp() {\r\n  const { isDark, toggleIsDark } = useContext(DarkModeContext);\r\n  const classes = useStyles({ isDark });\r\n  return (\r\n    <ThemeProvider theme={createMuiTheme(isDark ? darkTheme : lightTheme)}>\r\n      <CssBaseline />\r\n      <div className={classes.background}></div>\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          className={classes.appBar}\r\n          color=\"secondary\"\r\n          position=\"sticky\"\r\n          style={{ height: \"64px\" }}\r\n        >\r\n          <ToolBar className={classes.toolBar}>\r\n            <Typography color=\"inherit\" variant=\"h5\" className={classes.title}>\r\n              <AssignmentTurnedInIcon color=\"primary\" />\r\n              TodoList\r\n            </Typography>\r\n            <div>\r\n              <Grid component=\"label\" container alignItems=\"center\">\r\n                <Grid item>\r\n                  <span className=\"material-icons-outlined\">light_mode</span>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Switch\r\n                    disableRipple\r\n                    color=\"primary\"\r\n                    checked={isDark}\r\n                    onChange={toggleIsDark}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <span className=\"material-icons-outlined\">dark_mode</span>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </ToolBar>\r\n        </AppBar>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={11} sm={8} md={6} lg={4}>\r\n            <TodosProvider>\r\n              <TodoForm />\r\n              <TodoList />\r\n            </TodosProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import TodoApp from \"./TodoApp\";\n\nimport { DarkModeProvider } from \"./contexts/todosContext\";\n\nfunction App() {\n  return (\n    <DarkModeProvider>\n      <TodoApp />\n    </DarkModeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}